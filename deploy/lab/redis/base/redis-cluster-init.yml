---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster-init
data:
  script: |
    source "$REDIS_SCRIPT_DIR/cluster-common.sh"

    # Create an array containing the FQDNs for all members of the
    # redis stateful set.
    cluster_members=()
    list_cluster_members cluster_members $REDIS_NODE_COUNT

    if [ "$POD_NAME" = "redis-$(($REDIS_NODE_COUNT-1))" ] && [ $(wc -l < "$REDIS_DATA_DIR/nodes.conf") -lt 3 ]
    then
      echo "Creating Redis cluster in namespace $POD_NAMESPACE"

      # Wait for all cluster members to be online and available before
      # proceeding.
      wait_for_cluster_ready cluster_members

      # Build the redis-cli arguments to create the new cluster.
      cluster_cmd="--cluster create"
      for i in "${cluster_members[@]}"
      do
          member_ip=$(lookup_node_ip $i)
          cluster_cmd="$cluster_cmd $member_ip:6379"
      done

      # Create the cluster using the assembled command line.
      echo "Executing redis-cli to create the cluster; please wait, this could take a few moments..."
      cluster_cmd="$cluster_cmd --cluster-replicas $REDIS_CLUSTER_REPLICAS --cluster-yes"
      cli_result=$(redis-cli $cluster_cmd | grep -P "\[OK\] All \d+ slots covered")
      if [ -z "$cli_result" ]
      then
          echo "Redis cluster WAS NOT created in namespace $POD_NAMESPACE due to an initialization error."    
      else
          echo "Redis cluster successfully created and on-line in namespace '$POD_NAMESPACE'."
      fi
    else
      echo "A Redis cluster already exists in namespace '$POD_NAMESPACE'."
    fi
